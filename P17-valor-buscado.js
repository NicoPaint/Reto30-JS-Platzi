/* 
En este desaf칤o, tu objetivo es encontrar un valor espec칤fico en un array de dos dimensiones.

La funci칩n searchValue recibir치 dos par치metros: un array bidimensional y un valor a buscar. Tu tarea ser치 implementar la l칩gica necesaria para encontrar el valor y retornar un objeto con las propiedades row y column que indicar치n la posici칩n del valor dentro del array bidimensional.

Si el valor no se encuentra en la matriz, la funci칩n deber치 lanzar un error con el mensaje "Valor no encontrado". Recuerda que la sintaxis para lanzar errores es la siguiente

throw new Error("Valor no encontrado");

Ejemplo 1:


Input:

const array = [
  [1, 2, 3],
  [4, 5, 6],
  [7, 8, 9],
]

const value = 5

searchValue(array, value)

Output:

{
  row: 1,
  column: 1,
}

Ejemplo 2:


Input:

const array = [
  [1, 2, 3],
  [4, 5, 6],
  [7, 8, 9],
];

const value = 45;

Output: "Valor no encontrado"
*/

//Mi soluci칩n
export function searchValue(array, value) {
    // Tu c칩digo aqu칤 游녣
    const position = {};
  
    const isThereValue = array.flat().find(number => number === value);
    if (!isThereValue) throw new Error("Valor no encontrado");
  
    for (let i = 0; i < array.length; i++){
      for (let j = 0; j < array[i].length; j++){
        if (array[i][j] === value) {
          position.row = i;
          position.column = j;
        }
      }
    }
  
    return position;
  }

//Otra soluci칩n
export function searchValue(array, value) {

  let flat = array.flat(1).includes(value);
  if (!flat)
    throw new Error("Valor no encontrado");

  let rta;
  const result = array.map((array, index) => {
    if (array.includes(value))
      rta = { row: index, column: array.indexOf(value) }
  });
  return rta;
}